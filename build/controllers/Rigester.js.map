{"version":3,"sources":["../../src/controllers/Rigester.js"],"names":["register","req","res","db","bcrypt","body","name","email","password","hash","hashSync","status","json","transaction","trx","insert","into","returning","then","loginEmail","joined","Date","user","commit","catch","rollback"],"mappings":";;;;;AAAA,IAAMA,WAAW,SAAXA,QAAW,CAACC,GAAD,EAAMC,GAAN,EAAWC,EAAX,EAAeC,MAAf,EAA0B;AAAA,kBACPH,IAAII,IADG;AAAA,MACjCC,IADiC,aACjCA,IADiC;AAAA,MAC3BC,KAD2B,aAC3BA,KAD2B;AAAA,MACpBC,QADoB,aACpBA,QADoB;;AAEzC,MAAMC,OAAOL,OAAOM,QAAP,CAAgBF,QAAhB,CAAb;AACA,MAAI,CAACF,IAAD,IAAS,CAACC,KAAV,IAAmB,CAACC,QAAxB,EAAkC;AAChC,WAAON,IAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,2BAArB,CAAP;AACD;AACD;AACAT,KAAGU,WAAH,CAAe,eAAO;AACpBC,QACGC,MADH,CACU,EAAEN,UAAF,EAAQF,YAAR,EADV,EAEGS,IAFH,CAEQ,OAFR,EAGGC,SAHH,CAGa,OAHb,EAIGC,IAJH,CAIQ,sBAAc;AAClB,aAAOJ,IAAI,OAAJ,EACJG,SADI,CACM,GADN,EAEJF,MAFI,CAEG;AACNT,kBADM;AAENC,eAAOY,WAAW,CAAX,CAFD;AAGNC,gBAAQ,IAAIC,IAAJ;AAHF,OAFH,EAOJH,IAPI,CAOC;AAAA,eAAQhB,IAAIU,IAAJ,CAASU,KAAK,CAAL,CAAT,CAAR;AAAA,OAPD,CAAP;AAQD,KAbH,EAcGJ,IAdH,CAcQJ,IAAIS,MAdZ,EAeGC,KAfH,CAeSV,IAAIW,QAfb;AAgBD,GAjBD,EAiBGD,KAjBH,CAiBS;AAAA,WAAStB,IAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,oBAArB,CAAT;AAAA,GAjBT;AAkBD,CAzBD;;kBA2BeZ,Q","file":"Rigester.js","sourcesContent":["const register = (req, res, db, bcrypt) => {\n  const { name, email, password } = req.body;\n  const hash = bcrypt.hashSync(password);\n  if (!name || !email || !password) {\n    return res.status(400).json(\"Incorrect form submission\");\n  }\n  // db.select('email').from('users').where('email','=',email)\n  db.transaction(trx => {\n    trx\n      .insert({ hash, email })\n      .into(\"login\")\n      .returning(\"email\")\n      .then(loginEmail => {\n        return trx(\"users\")\n          .returning(\"*\")\n          .insert({\n            name,\n            email: loginEmail[0],\n            joined: new Date()\n          })\n          .then(user => res.json(user[0]));\n      })\n      .then(trx.commit)\n      .catch(trx.rollback);\n  }).catch(error => res.status(400).json(\"Unable to register\"));\n};\n\nexport default register;\n"]}